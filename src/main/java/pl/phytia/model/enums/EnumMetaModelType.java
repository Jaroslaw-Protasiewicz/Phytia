package pl.phytia.model.enums;

/**
 * Typy meta-modeli
 * 
 * @author Jarosław Protasiewicz
 */
public enum EnumMetaModelType {

	/**
	 * Szereg modeli MLP.
	 */
	SERIAL_MLP,

	/**
	 * Równoległy - klasyfikator SOM i predyktory MLP.
	 */
	PARALLEL_SOM_MLP,
	/**
	 * Równoległy - klasyfikator SOM i predyktory MLP.
	 */
	PARALLEL_SOM_7x7_MLP, PARALLEL_SOM_5x5_MLP, PARALLEL_SOM_4x4_MLP, PARALLEL_SOM_10x10_MLP, PARALLEL_SOM_15x15_MLP,
	/**
	 * Równoległy - klasyfikator SOM i predyktory RBF.
	 */
	PARALLEL_SOM_5x5_RBF05_R1, PARALLEL_SOM_5x5_RBF05_R2, PARALLEL_SOM_5x5_RBF05_R3, PARALLEL_SOM_5x5_RBF05_R4, PARALLEL_SOM_5x5_RBF05_R5, PARALLEL_SOM_5x5_RBF05_R6, PARALLEL_SOM_5x5_RBF05_R10, PARALLEL_SOM_5x5_RBF05_R15, PARALLEL_SOM_5x5_RBF05_R20, PARALLEL_SOM_5x5_RBF05_R30,

	PARALLEL_SOM_5x5_RBF1_R01, PARALLEL_SOM_5x5_RBF1_R025, PARALLEL_SOM_5x5_RBF1_R05, PARALLEL_SOM_5x5_RBF1_R075, PARALLEL_SOM_5x5_RBF1_R1, PARALLEL_SOM_5x5_RBF1_R125, PARALLEL_SOM_5x5_RBF1_R15, PARALLEL_SOM_5x5_RBF1_R175, PARALLEL_SOM_5x5_RBF1_R2, PARALLEL_SOM_5x5_RBF1_R3, PARALLEL_SOM_5x5_RBF1_R4, PARALLEL_SOM_5x5_RBF1_R5, PARALLEL_SOM_5x5_RBF1_R5_TA, PARALLEL_SOM_5x5_RBF1_R6, PARALLEL_SOM_5x5_RBF1_R10, PARALLEL_SOM_5x5_RBF1_R15x, PARALLEL_SOM_5x5_RBF1_R20, PARALLEL_SOM_5x5_RBF1_R30,

	PARALLEL_SOM_5x5_RBF3_R01, PARALLEL_SOM_5x5_RBF3_R025, PARALLEL_SOM_5x5_RBF3_R05, PARALLEL_SOM_5x5_RBF3_R075, PARALLEL_SOM_5x5_RBF3_R1,

	PARALLEL_SOM_5x5_RBF5_R01, PARALLEL_SOM_5x5_RBF5_R1, PARALLEL_SOM_5x5_RBF5_RA, PARALLEL_SOM_5x5_RBF5_R5, PARALLEL_SOM_5x5_RBF5_R025, PARALLEL_SOM_5x5_RBF5_R075, PARALLEL_SOM_5x5_RBF5_R05,

	PARALLEL_SOM_5x5_RBF10_R01, PARALLEL_SOM_5x5_RBF10_R025, PARALLEL_SOM_5x5_RBF10_R05,

	PARALLEL_SOM_5x5_RBF25_R01, PARALLEL_SOM_5x5_RBF25_R025, PARALLEL_SOM_5x5_RBF25_R05

	;

	static {
		EnumPersistenceDelegate.installFor(values());
	}
}
